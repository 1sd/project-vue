# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  DEPLOY_TARGET: TEST
#   SSH_KEY: ${{ secrets.TEST_SSH_KEY }}
#   AWS_ROLE_ARN: ${{ secrets.TEST_AWS_ASSUME_ROLE_ARN }}
  NODE_VERSION: 12
  PHP_VERSION: '7.3'
  COMPOSER: composer:v1

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Slack Notification
        uses: tokorom/action-slack-incoming-webhook@main
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          attachments: |
            [
              {
                "color": "#5bc0de",
                "text": "[info][${{ env.DEPLOY_TARGET }}] ${{ github.event.repository.url }} deployment start...",
                "footer": "<${{ github.event.repository.url }}/actions/runs/${{ github.run_id }}|#${{ github.run_number }}> build from <${{ github.event.pull_request.html_url }}|#${{ github.event.pull_request.number }}>"
              }
            ]
            
      - name: Checkout repository
        uses: actions/checkout@v2
        
#       - name: Checkout project-Deploy
#         uses: actions/checkout@v2
#         with:
#           repository: lvgs/project-Deploy
#           token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
#           path: external

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: mbstring, gd, xml, intl
          tools: pecl, deployer, ${{ env.COMPOSER }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Slack Notification on Success
        if: always()
        uses: tokorom/action-slack-incoming-webhook@main
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          attachments: |
            [
              {
                "color": "#5bc0de",
                "text": "[success][${{ env.DEPLOY_TARGET }}] ${{ github.event.repository.url }} deployment start...",
                "footer": "<${{ github.event.repository.url }}/actions/runs/${{ github.run_id }}|#${{ github.run_number }}> build from <${{ github.event.pull_request.html_url }}|#${{ github.event.pull_request.number }}>"
              }
            ]

#       - name: Slack Notification on Failure
#         uses: tokorom/action-slack-incoming-webhook@main
#         if: failure()
#         env:
#           INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#         with:
#           attachments: |
#             [
#               {
#                 "color": danger,
#                 "text": "[failure][${{ env.DEPLOY_TARGET }}] ${{ github.event.repository.url }} deployment start...",
#                 "footer": "<${{ github.event.repository.url }}/actions/runs/${{ github.run_id }}|#${{ github.run_number }}> build from <${{ github.event.pull_request.html_url }}|#${{ github.event.pull_request.number }}>"
#               }
#             ]
