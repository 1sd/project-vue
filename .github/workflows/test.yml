name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  
env:
  DEPLOY_TARGET: TEST
#   SSH_KEY: ${{ secrets.TEST_SSH_KEY }}
#   AWS_ROLE_ARN: ${{ secrets.TEST_AWS_ASSUME_ROLE_ARN }}
  NODE_VERSION: 12
  PHP_VERSION: '7.3'
  COMPOSER: composer:v1

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Slack Notification
        uses: tokorom/action-slack-incoming-webhook@main
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          attachments: |
            [
              {
                "color": "#5bc0de",
                "text": "[info][${{ env.DEPLOY_TARGET }}] ${{ github.event.repository.url }} deployment start...",
                "footer": "<${{ github.event.repository.url }}/actions/runs/${{ github.run_id }}|#${{ github.run_number }}> build from <${{ github.event.pull_request.html_url }}|#${{ github.event.pull_request.number }}>"
              }
            ]
            
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
#           role-to-assume: ${{ env.AWS_ROLE_ARN }}
#           role-duration-seconds: 1200
        
      - name: Checkout project-Deploy
        uses: actions/checkout@v2
        with:
          repository: 1sd/CodePipeline
#           token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          path: CodePipeline

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: mbstring, gd, xml, intl
          tools: pecl, deployer, ${{ env.COMPOSER }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - run: ls
      - run: cd CodePipeline
      - run: ls
      - run: cd ..
      
      - name: Slack Notification on Success
        if: success()
        uses: tokorom/action-slack-incoming-webhook@main
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          attachments: |
            [
              {
                "color": "#5AFF19",
                "text": "[success][${{ env.DEPLOY_TARGET }}] ${{ github.event.repository.url }} deployment start...",
                "footer": "<${{ github.event.repository.url }}/actions/runs/${{ github.run_id }}|#${{ github.run_number }}> build from <${{ github.event.pull_request.html_url }}|#${{ github.event.pull_request.number }}>"
              }
            ]

      - name: Slack Notification on Failure
        uses: tokorom/action-slack-incoming-webhook@main
        if: failure()
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          attachments: |
            [
              {
                "color": "#ff0000",
                "text": "[failure][${{ env.DEPLOY_TARGET }}] ${{ github.event.repository.url }} deployment start...",
                "footer": "<${{ github.event.repository.url }}/actions/runs/${{ github.run_id }}|#${{ github.run_number }}> build from <${{ github.event.pull_request.html_url }}|#${{ github.event.pull_request.number }}>"
              }
            ]
